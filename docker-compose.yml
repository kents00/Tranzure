services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    environment:
      - GO_ENV=production
      - DATABASE_MONGODB_HOST=mongodb
      - DATABASE_MONGODB_PORT=27017
      - DATABASE_MONGODB_DATABASE=payment_db
      - DATABASE_MONGODB_USERNAME=admin
      - DATABASE_MONGODB_PASSWORD=password
    depends_on:
      mongodb:
        condition: service_healthy
    networks:
      - payment-network
    restart: unless-stopped

  mongodb:
    image: mongo:7
    restart: always
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password
      MONGO_INITDB_DATABASE: payment_db
    volumes:
      - mongodb_data:/data/db
      - ./scripts/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - payment-network
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/test --quiet
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 40s

  mongo-express:
    image: mongo-express:latest
    restart: always
    ports:
      - "8081:8081"
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: admin
      ME_CONFIG_MONGODB_ADMINPASSWORD: password
      ME_CONFIG_MONGODB_URL: mongodb://admin:password@mongodb:27017/
      ME_CONFIG_BASICAUTH_USERNAME: admin
      ME_CONFIG_BASICAUTH_PASSWORD: admin
      ME_CONFIG_MONGODB_SERVER: mongodb
    depends_on:
      mongodb:
        condition: service_healthy
    networks:
      - payment-network

  adminer:
    image: adminer
    restart: always
    ports:
      - "8082:8080"
    networks:
      - payment-network

volumes:
  mongodb_data:

networks:
  payment-network:
    driver: bridge
